name: Rust test Common

on:
  workflow_call:
    inputs:
      network:
        required: true
        type: string
      run-id:
        description: "optional run-id to download the artifacts"
        required: false
        type: string

env:
  SNAPS_PATH: "/tmp/ci"
  RUSTFLAGS: "-A warnings"

jobs:
  rust_tests:
    runs-on: parity-default
    container:
      image: docker.io/paritytech/ci-unified:bullseye-1.88.0-2025-06-27-v202507221446
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: extractions/setup-just@v2

      - name: Fetch cache
        uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2.8.0
        with:
          shared-key: "ahm-cache"
          cache-on-failure: true # cache allways

      - name: create_base_dir
        shell: bash
        run: |
          mkdir $SNAPS_PATH

      - name: download_artifacts
        id: download_artifacts
        shell: bash
        env:
          NETWORK: ${{ inputs.network }}
          RUN_ID: ${{ inputs.run-id }}
          GH_TOKEN: ${{ github.token }}
        run: |
          if [[ $RUN_ID == "" ]]; then
            echo "getting the latest completed run"
            RUN_ID=$(gh run list --workflow zombie-bite.yml -b main -e schedule -L 1 -s completed  --json databaseId | jq -r '.[].databaseId')
          fi;

          echo "downloading artifacts from https://github.com/paritytech/ahm-dryrun/actions/runs/${RUN_ID}"
          gh run download $RUN_ID -p "${NETWORK}-try-runtime*" -D $SNAPS_PATH
          ls -ltr $SNAPS_PATH
          # Single artifact contains all 4 snapshots
          ARTIFACTS_DIR=$(ls -t $SNAPS_PATH|grep try-runtime-snaps|grep -v pre|grep -v post|head -1)
          echo "ARTIFACTS_DIR=$SNAPS_PATH/$ARTIFACTS_DIR" >> $GITHUB_OUTPUT

      - name: verify_and_move_snaps
        shell: bash
        env:
          NETWORK: ${{ inputs.network }}
        run: |
          # All 4 snapshots are in a single artifact directory
          for i in rc-pre.snap ah-pre.snap rc-post.snap ah-post.snap;do
            if [ ! -f "${{ steps.download_artifacts.outputs.ARTIFACTS_DIR }}/${NETWORK}-${i}" ]; then
              echo "ERROR: Could not find ${NETWORK}-${i}"
              exit 1
            else
              mv "${{ steps.download_artifacts.outputs.ARTIFACTS_DIR }}/${NETWORK}-${i}" $SNAPS_PATH
            fi
          done;

          echo "final files in ${SNAPS_PATH}"
          ls -ltr $SNAPS_PATH

      - name: run_rust_tests
        shell: bash
        env:
          NETWORK: ${{ inputs.network }}
        run: |

          # Run the rust tests
          just ahm rust-test $NETWORK $SNAPS_PATH
